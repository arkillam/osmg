package osmg.enums;

/**
 * The different types of weapons in the game. For a quick, easy approach, I have made all weapon-related values fields
 * of these enums.
 */

public enum WeaponEnum {

	BALLISTIC_LARGE("Large Ballistic", true, 2, 5, "4d6", 10, "3d6", 15, "2d6", 4),
	BALLISTIC_SMALL("Small Ballistic", false, 1, 3, "2d6", 6, "2d4", 9, "1d6", 2),
	ENERGY_LARGE("Large Energy", true, 2, 5, "3d8", 10, "3d8", 15, "3d8", 10),
	ENERGY_SMALL("Small Energy", false, 1, 3, "2d6", 6, "2d6", 9, "2d6", 5),
	FLAMER_SMALL("Small Flamer", false, 1, 1, "1d4", 2, "1d4", 3, "1d4", 4),
	MISSILE_LARGE("Large Missile", true, 2, 6, "1d20", 12, "1d20", 18, "1d20", 7),
	MISSILE_SMALL("Small Missile", false, 1, 4, "1d12", 8, "1d12", 12, "1d12", 4);

	/** the build point cost for a weapon system */
	private int buildPoints;

	/** the amount of heat generated by firing */
	private int heat;

	/** there are two sizes, small and large - obviously, if not large, weapons are small */
	private boolean large;

	/** the limit of the weapon's "long" range (also really its maximum range) */
	private int longRange;

	/** the dice rolled (e.g. 3d6) to generate damage done for a long-range attack */
	private String longRangeDamage;

	/** the limit of the weapon's "medium" range */
	private int mediumRange;

	/** the dice rolled (e.g. 3d6) to generate damage done for a medium-range attack */
	private String mediumRangeDamage;

	private String name;

	/** the limit of the weapon's "short" range (within this range, attacks get a bonus) */
	private int shortRange;

	/** the dice rolled (e.g. 3d6) to generate damage done for a short-range attack */
	private String shortRangeDamage;

	/**
	 * @param name
	 *            weapon's name
	 * @param large
	 *            true = large, false = small
	 * @param buildPoints
	 *            build point cost
	 * @param shortRange
	 *            max short range
	 * @param shortRangeDamage
	 *            short range damage
	 * @param mediumRange
	 *            max medium range
	 * @param mediumRangeDamage
	 *            medium range damage
	 * @param longRange
	 *            max long range (also max range period)
	 * @param longRangeDamage
	 *            long range damage
	 * @param heat
	 *            heat cost per use
	 */
	private WeaponEnum(String name, boolean large, int buildPoints, int shortRange, String shortRangeDamage,
			int mediumRange, String mediumRangeDamage, int longRange, String longRangeDamage, int heat) {
		this.name = name;
		this.large = large;
		this.buildPoints = buildPoints;
		this.shortRange = shortRange;
		this.shortRangeDamage = shortRangeDamage;
		this.mediumRange = mediumRange;
		this.mediumRangeDamage = mediumRangeDamage;
		this.longRange = longRange;
		this.longRangeDamage = longRangeDamage;
		this.heat = heat;
	}

	public int getBuildPoints() {
		return buildPoints;
	}

	public int getHeat() {
		return heat;
	}

	public int getLongRange() {
		return longRange;
	}

	public String getLongRangeDamage() {
		return longRangeDamage;
	}

	public int getMediumRange() {
		return mediumRange;
	}

	public String getMediumRangeDamage() {
		return mediumRangeDamage;
	}

	public String getName() {
		return name;
	}

	public int getShortRange() {
		return shortRange;
	}

	public String getShortRangeDamage() {
		return shortRangeDamage;
	}

	public boolean isLarge() {
		return large;
	}
}
